import os
import asyncio
import logging
import tempfile
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import ffmpeg

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from config import (
    BOT_TOKEN, VIDEO_CIRCLE_SIZE, MAX_FILE_SIZE_MB, MAX_DURATION_SECONDS,
    VIDEO_CODEC, AUDIO_CODEC, CRF_VALUE, TEMP_DIR, CLEANUP_TEMP_FILES,
    LOG_LEVEL, LOG_FORMAT, MESSAGES, validate_config, setup_temp_directory
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format=LOG_FORMAT,
    level=getattr(logging, LOG_LEVEL)
)
logger = logging.getLogger(__name__)

class VideoCircleBot:
    def __init__(self):
        self.temp_dir = tempfile.mkdtemp()
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        welcome_msg = """üé• –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ–∫—Ä—É–∂–∫–æ–≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞!

üìπ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±–æ–µ –≤–∏–¥–µ–æ!
üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–º –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫ –≤ 640p - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ –¥–ª—è Telegram
üîä –ó–≤—É–∫: 192kbps —Å—Ç–µ—Ä–µ–æ –≤—ã—Å–æ—á–∞–π—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞!

‚ú® –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –≤—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã: MP4, AVI, MOV, MKV, WebM –∏ –¥—Ä—É–≥–∏–µ
‚ö° –ë—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º!

/help - —Å–ø—Ä–∞–≤–∫–∞"""
        await update.message.reply_text(welcome_msg)
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_msg = """üîß –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:

1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª –ª—é–±–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
2. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
3. –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!

üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
‚Ä¢ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 640√ó640 (–º–∞–∫—Å–∏–º—É–º –¥–ª—è Telegram)
‚Ä¢ –ó–≤—É–∫: 192 –∫–±–∏—Ç/—Å —Å—Ç–µ—Ä–µ–æ, 48kHz
‚Ä¢ –ö–æ–¥–µ–∫: H.264 –≤—ã—Å–æ–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
‚Ä¢ –ë–∏—Ç—Ä–µ–π—Ç: 1500 –∫–±–∏—Ç/—Å

‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: MP4, AVI, MOV, MKV, WebM, FLV –∏ –¥—Ä—É–≥–∏–µ
üìè –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: –¥–æ 50MB, –¥–æ 60 —Å–µ–∫—É–Ω–¥

‚ö° –ê–ª–≥–æ—Ä–∏—Ç–º:
1. –û–±—Ä–µ–∑–∫–∞ –¥–æ –∫–≤–∞–¥—Ä–∞—Ç–∞ (–ø–æ —Ü–µ–Ω—Ç—Ä—É)
2. –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ 640√ó640
3. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –∏ –∑–≤—É–∫–∞
4. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è Telegram"""
        await update.message.reply_text(help_msg)
    
    def process_video_to_circle_sync(self, input_path, output_path):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ 640p"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
            probe = ffmpeg.probe(input_path)
            video_info = next(s for s in probe['streams'] if s['codec_type'] == 'video')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞—É–¥–∏–æ
            audio_streams = [s for s in probe['streams'] if s['codec_type'] == 'audio']
            has_audio = len(audio_streams) > 0
            
            width = int(video_info['width'])
            height = int(video_info['height'])
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞ (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)
            size = min(width, height)
            
            # –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
            x_offset = (width - size) // 2
            y_offset = (height - size) // 2
            
            # –°–æ–∑–¥–∞–µ–º ffmpeg pipeline
            input_stream = ffmpeg.input(input_path)
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ 640p
            video_stream = (
                input_stream
                .video
                .filter('crop', size, size, x_offset, y_offset)
                .filter('scale', 640, 640)  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
            )
            
            # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
            video_args = {
                'vcodec': 'libx264',
                'preset': 'medium',        # –ë–∞–ª–∞–Ω—Å –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏
                'crf': 16,                 # –û—á–µ–Ω—å –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
                'pix_fmt': 'yuv420p',
                'movflags': 'faststart',
                'maxrate': '1500k',        # –í—ã—Å–æ–∫–∏–π –±–∏—Ç—Ä–µ–π—Ç
                'bufsize': '3000k',        # –ë–æ–ª—å—à–æ–π –±—É—Ñ–µ—Ä
                'profile:v': 'high',       # –í—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å
                'level': '4.0',
                't': min(60, MAX_DURATION_SECONDS)
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
            if has_audio:
                audio_stream = input_stream.audio
                audio_args = {
                    'acodec': 'aac',
                    'audio_bitrate': '192k',  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∑–≤—É–∫–∞
                    'ar': 48000,              # –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞
                    'ac': 2                   # –°—Ç–µ—Ä–µ–æ
                }
                
                # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                all_args = {**video_args, **audio_args}
                
                # –°–æ–∑–¥–∞–µ–º output —Å –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ
                output = ffmpeg.output(
                    video_stream,
                    audio_stream,
                    output_path,
                    **all_args
                )
            else:
                # –¢–æ–ª—å–∫–æ –≤–∏–¥–µ–æ
                output = ffmpeg.output(
                    video_stream,
                    output_path,
                    **video_args
                )
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
            ffmpeg.run(output, overwrite_output=True, quiet=True)
            
            return True
            
        except ffmpeg.Error as e:
            logger.error(f"–û—à–∏–±–∫–∞ ffmpeg: {e}")
            return False
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ: {e}")
            return False
    
    async def handle_video(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            processing_msg = await update.message.reply_text("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∏–¥–µ–æ –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ 640p...")
            
            # –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–µ–æ —Ñ–∞–π–ª
            video = update.message.video or update.message.document
            
            if not video:
                await processing_msg.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ —Ñ–∞–π–ª")
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            if video.file_size > MAX_FILE_SIZE_MB * 1024 * 1024:
                await processing_msg.edit_text(f"‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º: {MAX_FILE_SIZE_MB}MB")
                return
            
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            file = await context.bot.get_file(video.file_id)
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            input_file = tempfile.NamedTemporaryFile(suffix='.mp4', delete=False)
            output_file = tempfile.NamedTemporaryFile(suffix='.mp4', delete=False)
            
            input_path = input_file.name
            output_path = output_file.name
            
            input_file.close()
            output_file.close()
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
            await file.download_to_drive(input_path)
            
            await processing_msg.edit_text("üé¨ –°–æ–∑–¥–∞—é –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫ 640p –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —Å –±–æ–ª—å—à–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º
            try:
                loop = asyncio.get_event_loop()
                success = await asyncio.wait_for(
                    loop.run_in_executor(None, self.process_video_to_circle_sync, input_path, output_path),
                    timeout=90.0  # –ë–æ–ª—å—à–æ–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
                )
            except asyncio.TimeoutError:
                logger.error("–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ")
                await processing_msg.edit_text("‚ùå –í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∫–æ—Ä–æ—á–µ.")
                return
            
            if success and os.path.exists(output_path) and os.path.getsize(output_path) > 0:
                await processing_msg.edit_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞...")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫
                with open(output_path, 'rb') as video_file:
                    await context.bot.send_video_note(
                        chat_id=update.effective_chat.id,
                        video_note=video_file,
                        duration=min(60, MAX_DURATION_SECONDS),
                        length=640,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
                        reply_to_message_id=update.message.message_id
                    )
                
                await processing_msg.edit_text("‚úÖ –ì–æ—Ç–æ–≤–æ! –í–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫ 640p —Å–æ–∑–¥–∞–Ω –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ!")
                
            else:
                await processing_msg.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞.")
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            try:
                os.unlink(input_path)
                if os.path.exists(output_path):
                    os.unlink(output_path)
            except:
                pass
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ: {e}")
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ")
    
    async def handle_other_messages(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        await update.message.reply_text(
            "üìπ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ–∫—Ä—É–∂–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞!\n\n"
            "üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: 640p, 192kbps –∑–≤—É–∫, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n"
            "/help - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞"
        )

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not validate_config():
        return
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    setup_temp_directory()
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    bot = VideoCircleBot()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", bot.start))
    application.add_handler(CommandHandler("help", bot.help_command))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ
    application.add_handler(MessageHandler(
        filters.VIDEO | (filters.Document.VIDEO), 
        bot.handle_video
    ))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND, 
        bot.handle_other_messages
    ))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ –ü—Ä–æ—Å—Ç–æ–π –±–æ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –∑–∞–ø—É—â–µ–Ω!")
    print("üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: 640p (–º–∞–∫—Å–∏–º—É–º –¥–ª—è Telegram)")
    print("üîä –ó–≤—É–∫: 192kbps —Å—Ç–µ—Ä–µ–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ")
    print("‚ö° –ë–µ–∑ –≤—ã–±–æ—Ä–∞ - —Å—Ä–∞–∑—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ!")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()
